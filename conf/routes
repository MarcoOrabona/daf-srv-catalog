# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET         /swagger.json                                                controllers.ApiHelpController.getResources
GET         /swg-ui/                                                     controllers.Assets.at(path="/public/swagger",file="index.html")
GET         /swg-ui/*file                                                controllers.Assets.at(path="/public/swagger",file)


GET         /catalog-manager/v1/public/catalog-ds/getbyname/:name        controllers.CatalogController.getPublicCatalog(name: String)
GET         /catalog-manager/v1/catalog-ds/getbyname/:name               controllers.CatalogController.getCatalog(name: String)
GET         /catalog-manager/v1/catalog-ds/is_present/:name              controllers.CatalogController.isPresent(name: String)
GET         /catalog-manager/v1/catalog-ds/get/:logical_uri              controllers.CatalogController.getCatalogByLogicalUri(logical_uri: String)
POST        /catalog-manager/v1/catalog-ds/add                           controllers.CatalogController.addMetaCatalog
POST        /catalog-manager/v1/catalog-ds/add-queue                     controllers.CatalogController.addQueueCatalog
DELETE      /catalog-manager/v1/catalog-ds/delete/:datasetName/:org      controllers.CatalogController.deleteCatalog(datasetName: String, org: String)
GET         /catalog-manager/v1/catalog-ds/standard/fields               controllers.CatalogController.getDatasetStandardFields
GET         /catalog-manager/v1/catalog-ds/tags                          controllers.CatalogController.getTags
POST        /catalog-manager/v1/catalog-ds/linked/:name                  controllers.CatalogController.getLinkedDataset(name: String, limit: Option[Int])
POST        /catalog-manager/v1/catalog-ds/kafka/notifications/add       controllers.CatalogController.sendToKafka

POST        /catalog-manager/v1/kylo/feed/:fileType                      controllers.KyloController.createKyloFeed(fileType: String)

GET         /catalog-manager/v1/nifi/start/:orgName/:datasetName         controllers.NifiControllers.startNifiProcessor(datasetName: String, orgName: String)

POST        /catalog-manager/v1/ckan/add                                 controllers.CkanController.addCatalogCkanGeo
#DELETE      /ckan/purgeDatasetCkanGeo/:datasetId                         controllers.CkanController.purgeDatasetCkanGeo(datasetId: String)
DELETE      /catalog-manager/v1/ckan/purge/:datasetId                    controllers.CkanController.purgeDatasetCkanGeo(datasetId: String)

